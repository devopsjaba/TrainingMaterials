1. 쿠키 (Cookie)
    1) 이름과 값의 쌍으로 구성된 정보 
    2) 아스키 문자만 가능
    3) 서버에서 생성 후 전송 
    4) 브라우저에 저장 
    5) 유효기간 이후 자동 삭제 

2. 쿠키의 작동 과정 
    1) 클라이언트에서 서버로 요청이 가면 서버에서 
        Cookie cookie = new Cookie("id", "kosta");          //쿠키 생성
        cookie.setMaxAge(60*60*24);             //유효기간 (초단위)
        response.addCookie(cookie);             //응답에 쿠키 추가 
        - 요청 헤더에 쿠키가 따라감 => 클라이언트 식별 기술 

    2) 처음에 클라이언트가 서버에 요청
       서버에서 쿠키가 만들어짐 
       만들어진 쿠기가 응답헤더에 담아 보냄
       클라이언트에 쿠기도 함께 감 
       서버가 보내준 쿠키가 브라우저에 저장됨 

    3) 클라이언트가 (url주소) 동일한 서버에 재요청 
       자동으로 브라우저에 저장된 쿠키가 재요청과 함께 전송됨 
       쿠키는 클라이언트를 구분하기 위한 기술임                

3. 세션
    1) 서로 관련된 요청, 답변들을 하나로 묶은 것 - 쿠키를 이용함 
    2) a collection of related HTTP transactions made by one browser to one server
    3) browser마다 개별 저장소(session 객체)를 서버에서 제공 
        - browser : 서버 = 1 : 1
        - 같은 PC라도 다른 브라우저라면 다른 세션ID를 저장함 
    4) 쿠키 : 브라우저에 저장, 세션 : 서버에 저장 
    5) 같은 세션ID를 쓰는 한 같은 세션저장소(세션 객체)를 사용할 수 있는 것임        
    6) 로그인 ~ 로그아웃까지가 하나의 세션이라고 할수 있음 

4. 세션의 작동 과정 
    1) 클라이언트가 요청을 하면 서버가 세션 ID(JSESSIONID)를 쿠키에 담아서 응답 해줌 
        - 브라우저로 요청하면 서버는 세션(저장소)을 무조건 생성함 
        - 세션 객체마다 갖고 있는 것은 세션ID임 
        - 이 저장소를 사용할 수 있게 세션ID가 담겨있는 쿠키를 생성해서 응답헤더로 보냄 
    2) 그 다음 요청부터는 앞서 응답된 쿠키가 자동으로 따라감 
        - 두번째 요청부터 같은 세션임 
        - 쿠키로 서버에 계속 같이 감.
        - 요청에 셔션이 꼬리표로 붙여서 가는 것임. (구별이 됨)
            - 서버가 이 JSESSIONID를 보고 같은 브라우저에서 왔는지 여부를 알수 있음.
    3) HTTP 각 요청은 독립적임 ==> 서로 관련이 없음 
        - 쿠키를 이용해서 세션ID를 활용해서 특정 요청들에 공통점이 있게 됨 
        - 같은 세션ID라는 공통점이 생기게 됨 
            - 같은 세션ID를 사용하면서 세션 저장소를 사용할 수 있게 됨 
            - 프로그램들에서 세션 객체를 사용할수 있음.
    4) 세션이 끝나고 나면 새로운 세션 ID가 발급됨
        - 새로운 세션이 시작됨 

5. 세션 객체 
    1) 얻기
        HttpSession session = request.getSession();                
        session.setAttribute("id", "kosta");
    2) 종료
        - 수동 종료
            - invalidate()
            - 로그 아웃시 사용 
        - 자동 종료 (web.xml)
            - time out 

6. 구현 
    1) 게시판 이용시 화면이동  
                                                         No     
        index.jsp -----------> BoardController.java ------------->  loginForm.jsp   <-----
                                    로그인 ?                               |              |  
                                       |                                   | id,pwd       |  
                                       | Yes                               |              |
                                      \|/                                 \|/             |
                                  boardList.jsp                   LoginController.java    |   
                                       /|\                                  |             |
                                        |             Yes                  \|/        No  |
                                        |-------------------------------- id, pwd 일치----- 
        
        - index.jsp에서 홈에서 Board를 클릭하면 BoardController가 로그인 유무를 확인 
        - 로그인 되어 있다면 boardList.jsp로 이동 
        - 로그인 안되어 있다면 loginForm.jsp로 리다이렉트 
        - loginForm.jsp에서 id, pwd를 LoginController가 확인 
        - 일치하면 boardList.jsp로 이동 
        - 일치하지 않으면 loginForm.jsp로 리다이렉트 


