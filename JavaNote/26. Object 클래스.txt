1. Object - 모든 클래스의 최상위 클래스 

2. java.lang 패키지 
    1) 모든 프로그램에서 가장 많이 사용하는 기본 클래스 포함 
    2) 프로그래밍시 import하지 않아도 자동으로 import 됨 
    3) String, Integer, System....

3. 모든 클래스는 Object를 상속 받음
    1) Object 클래스의 메서드 중 일부는 재정의해서 사용 할 수 있음 
    2) 컴파일러가 extends Object를 추가함 
        - class Student => class Student extends Object 

4. String toString() 메서드 
    - 객체 정보를 문자열로 표현하여 반환함 
        - 클래스 이름@해시 코드 값 (16진수) 
    - 재정의하여 객체에 대한 설명이나 특정 멤버 변수 값을 반환함   
        - String이나 Integer등 여러 JDK 클래스에는 toString() 메서드가 
          이미 재정의 되어 있음.  

5. boolean equals(Object obj) 메서드 
    - 두 인스턴스의 주소 값을 비교하여 boolean 값 반환 해주는 메서드임 
    - 주소 값이 같다면 당연히 같은 인스턴스임 
    - 서로 다른 주소 값을 가질 때도 같은 인스턴스라고 정의할 수 있는 경우가 있음 
        - 재정의하여 두 인스턴스가 논리적으로 동일함의 여부를 구현함 
        - 인스턴스가 다르더라도 논리적으로 동일한 경우 true를 반환하도록
          재정의 할 수 있음 
          - 예) 같은 학번, 같은 사번, 같은 아이디의 회원....    
        
6. int hashCode() 메서드 
    0) 해시(hash)
        - 정보를 저장하거나 검색할 때 사용하는 자료 구조
        - index = hash(key)
          -----   ---- ------
          저장위치  해시함수 객체정보
        - 객체의 해시 코드 값이 반환됨 (메모리 위치 값)   
    1) 정보를 어디에 저장할 것인지, 어디서 가져올 것인지 해시 함수를 사용하여 
       구현함 .
    2) 해시 함수는 객체의 특정 정보(키 값)를 매개변수 값으로 넣으면 
       그 객체가 저장되어야 할 위치를 반환함    
    3) hashCode()는 인스턴스의 저장 주소를 반환함 
    4) 힙메모리에 인스턴스가 저장되는 방식이 hash 방식 
    5) 인스터스가 다르더라도 논리적으로 동일한 경우 true를 반환하도록 
       재정의 할 수 있음 

7. 두 인스턴스가 논리적으로 동일함 
    1) 두 인스턴스에 대한 equals()의 반환 값이 true (재정의)
    2) 두 인스턴스에 대한 동일한 hashCode() 값을 반환  (재정의)











