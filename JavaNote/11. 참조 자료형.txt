1. 참조 자료형으로서 배열
    1) 기본 자료형은 스택 메모리에 실제 데이터값을 저장 
    2) 참조 자료형은 스택 메모리에 실제 데이터값이 아닌
       힙 메모리에 저장된 객체의 위치를 저장함 
       - 참조 자료형 변수를 복사하면 실제 데이터가 복사되는 것이 아니고 
         실제 데이터가 복사되는 것이 아니라 실제 데이터의 위치값이 복사됨 
       - 하나의 참조 변수를 이용해 데이터를 수정하면 
         다른 참조 변수가 가리키는 데이터도 변하게 되는 것임   

2. 배열의 길이 
    1) 반복의 횟수를 결정하기 위해서는 먼저 배열의 길이를 알아야 함.
    2) 배열 참조 변수.length
        - 배열의 길이를 구할 수 있음
        - 포인트 연산자(.)는 '해당 참조 변수가 가리키는 곳으로 가라'는 의미임.
        - length
            - 객체에 포함된 읽기 전용 속성
            - 배열 객체의 방 개수에 해당하는 값을 지님         

3. for~each 문
    - for(원소 자료형 변수명 : 집합 객체) { }           

4. 2차원 (정방 행렬) 배열 
    1) 가로 및 세로 방향의 2차원으로 데이터를 저장하는 배열 
        - 대괄호안에는 배열의 인덱스가 들어감
        - 인덱스 쌍으로 이뤄짐 
            - 행(row)번호와 열(column)번호로 구성 
            - 행번호 : 세로방향으로 숫자가 늘어남 
              열번호 : 가로방향으로 숫자가 늘어남 
            - 각 방향의 인덱스는 0부터 시작함.  
    2) 예
        int[][] a;
    3) 선언 방법
        자료형[][] 변수명;     
        자료형 변수명[][];
        자료형[] 변수명[];   
    4) 메모리는 2차원 데이터를 바로 저장할 수 없음
    5) 2차원 배열은 1차원 배열을 원소로 포함하고 있는 1차원 배열 
    6) 배열 객체 생성하고 값 대입하기 
        - 자료형[][] 참조 변수명 = new 자료형[행의 길이][열의 길이];
          참조 변수명[0][0] = 값;
          참조 변수명[0][1] = 값;
          ...
          참조 변수명[행의 길이 -1][열의 길이 -1] = 값;

        - 자료형[][] 참조 변수명 = new 자료형[행의 길이];   //열의 길이 미표시          
          참조 변수명[0] = 1차원 배열의 생성;
          참조 변수명[1] = 1차원 배열의 생성;
          ...
          참조 변수명[행의 길이-1] = 1차원 배열의 생성;

        - 자료형[][] 참조 변수명 = new 자료형[][] {{값, 값,...., 값},...,{값, 값,...., 값}};  

        - 자료형[][] 참조 변수명 = {{값, 값,...., 값},...,{값, 값,...., 값}};        

5. 2차원 비정방 행렬 배열 
    1) 배열 객체의 행 성분부터 생성하고 열 성분 생성하기
        - 자료형[][] 참조 변수명 = new 자료형[행의 길이][];
          참조 변수명[0] = 1차원 배열의 생성;
          참조 변수명[1] = 1차원 배열의 생성;
          ...
          참조 변수명[행의 길이 -1][열의 길이 -1] = 1차원 배열의 생성;   

    2) 자료형과 대입할 값만 입력하기 
        -  자료형[][] 참조 변수명 = new 자료형[][] {{값, 값,...., 값},...,{값, 값,...., 값}};

    3) 대입할 값만 입력하기 
        -  자료형[][] 참조 변수명 =  {{값, 값,...., 값},...,{값, 값,...., 값}};
                                     ----------------      ---------------
                                      0번째 행 데이터        마지막 행 데이터 

6. 2차원 배열 출력 
  1) 이중 for문 이용한 2차원 배열 원소 출력                                                                   

7. main() 메서드의 입력매개변수
  1) public static void main(String[] ar) {
                             --------
     }                       여러 개의 String 객체를 묶어 저장하는 문자열 배열 

  2) 참고
    - 타입 변환 메서드    
      - 문자열 => 정수 : Integer.parseInt(문자열)
      - 문자열 => 실수 : Integer.parseDouble(문자열)
      - 정수 => 문자열 : String.valueOf(정수)
      - 실수 => 문자열 : String.valueOf(실수)