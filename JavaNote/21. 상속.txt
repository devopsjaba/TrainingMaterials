1. 클래스의 상속
    1) 새로운 클래스를 정의 할 때 
      이미 구현된 클래스를 상속(Inheritance) 받아서 
      속성이나 기능을 확장하여 클래스를 구현함 
    2) 이미 구현된 클래스보다 더 구체적인 기능을 가진 클래스를 구현해야 
      할때 기존 클래스를 상속함       

    3) 상속 클래스 
        - 상위 클래스, parent class, base class, super class   

    4) 상속 받는 클래스       
        - 하위 클래스, child class, derived class, sub class 

2. 클래스 상속 문법 
    1) class B extends A {

       }           

    2) extends 키워드 뒤에는 단 하나의 클래스만 올 수 있음.
    3) 자바는 단일 상속(single inheritance)만을 지원함    
    4) protected 접근 제어자 
        - 상위 클래스에 선언된 private 멤버 변수는 하위 클래스에서 접근 할수 없음
        - 외부 클래스는 접근 할 수 없지만, 하위 클래스는 접근 할 수 있도록
          protected 접근 제어자를 사용 
          
3. 고객 관리 프로그램 구현하기     
    1) 일반 고객(Customer) 클래스 
        - 고객 아이디 
        - 고객 이름
        - 고급 등급
        - 보너스 포인트 
        - 보너스 포인트 적립비율 
            - 물품 구매시 1%의 보너스 포인트 지급

    2) 새로운 고객 등급이 필요한 경우 
        - 제품을 살 때는 항상 10% 할인해 줌
        - 물품 구매시 5%의 보너스 포인트 지급
        - 담당 전문 상담원 배정해 주기 

    3) 중간 등급 만들기 


4. 상속에서 클래스 생성 과정
    1) 하위클래스 생성되는 과정
        - 하위 클래스 생성하면 상위 클래스가 먼저 생성 됨 
            - new VIPCustomer()를 호출하면 Customer()가 먼저 호출됨 
        - 클래스가 상속 받은 경우 하위 클래스의 생성자에서는 
          반드시 상위 클래스의 생성자를 호출 함 

    2) super (부모를 부르는 예약어)          
        - 하위 클래스에서 가지는 상위 클래스에 대한 참조 값
        - super()는 상위 클래스의 기본 생성자를 호출 함 
        - 하위 클래스에서 명시적으로 상위 클래스의 생성자를 호출하지 않으면 
          super()가 호출 됨 
        - 상위 클래스의 기본 생성자가 없는 경우 
          하위 클래스에서의 생성자에서는 super를 이용하여 명시적으로 
          상위 클래스의 다른 생성자를 호출해야 함 
        - super는 생성된 상위 클래스 인스턴스의 참조 값을 가지므로 
          super를 이용하여 상위 클래스의 메서드나 멤버 변수에 접근할 수 있음.     

5. 형 변환
    1) 상위 클래스로 묵시적 클래스 형 변환 (업 캐스팅)
        - 상위 클래스로 변수를 선언하고 하위 클래스의 생성자로 인스턴스를 생성 
        - Customer vc  = new VIPCustomer();
          --------           -------------    
          선언된 클래스 형      생성된 인스턴스의 클래스형 
          (상위 클래스형)       (하위 클래스형)

    2) 다운 캐스팅 (DownCasting)
        - 업캐스팅 된 클래스를 다시 원래의 타입으로 형 변환           
        - 하위 클래스로의 형 변환은 명시적으로 해야 함 
        - 예)
                Customer vc = new VIPCustomer()           //묵시적 
                VIPCustomer vCustomer = (VIPCustomer)vc   //명시적

        - instanceof
            - 인스턴스의 타입 체크 
            - 원래 인스턴스의 형이 맞는지 여부를 체크하기 위함
            - 맞으면 true, 아니면 false를 반환함 


6. 메서드 재정의(overriding)        
    1) 하위 클래스에서 메서드 재정의하기 
        - 오버라이딩(overriding)
            - 상위 클래스에 정의된 메서드의 구현 내용이 
             하위 클래스에서 구현할 내용과 맞지 않는 경우에
             하위 클래스에서 동일한 이름의 메서드를 재정의 할 수 있음.

    2) @Override 애노테이션 (annotation)             
        - 애노테이션은 원래 주석이라는 의미 
        - 컴파일러에게 특별한 정보를 제공해주는 역할 
            - @Override             재정의된 메서드라는 정보 제공 
            - @Deprecated           이후 버전에서 사용되지 않을 수 있는
                                    변수, 메서드에 사용됨 
            - @FunctionalInferface  함수형 인터페이스라는 정보 제공                                     