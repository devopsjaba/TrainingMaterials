1. 스트림(Stream)   
    1) 자료가 모여 있는 배열이나 컬렉션 또는 특정 범위 안에 있는 일련의 숫자를 처리하는 
       기능이 구현
    2) 배열 요소를 특정 기준에 따라 정렬(sorting)하거나, 요소 중 특정 값은 제외하고
       출력하는(filter) 기능 
    3) 여러 자료의 처리에 대한 기능을 구현 해 놓은 클래스가 스트림(stream)임.    
    4) 자료의 대상과 관계없이 동일한 연산을 수행 
    5) 배열, 컬렉션을 대상으로 연산을 수행 함 
    6) 한 번 생성하고 사용한 스트림은 재사용 할수 없음 
        - 다른 연산을 수행하기 위해서는 스트림을 다시 생성해야 함 
    7) 스트림 연산은 기존 자료를 변경하지 않음 
        - 자료에 대한 스트림을 생성하면 스트림이 사용하는 메모리 공간은
          별도로 생성됨
        - 연산이 수행되더라도 기존 자료에 대한 변경은 발생하지 않음                     

2. 스트림 연산 
    1) 중간 연산
        - 자료를 거르거나 변경하여 또 다른 자료를 내부적으로 생성함
        - 스트림을 처리하고 다른 스트림을 반환 
    2) 최종 연산     
        - 생성된 내부 자료를 소모해 가면서 연산을 수행함 
        - 마지막에 한 번만 호출됨 
        - 최종 연산이 호출되어야 중간 연산의 결과가 만들어 짐.
            - 중간 연산에 대한 결과를 연산 중에 알수 없음
            - 이를 '지연 연산'이라 함 

3. 중간 연산        
    1) filter()
        - 조건을 넣고 그 조건에 맞는 참인 경우만 추출하는 경우에 사용함 
    2) map()
        - 클래스가 가진 자료 중 이름만 출력하는 경우에 사용함
    3) sorted()        
    3) 함수를 수행하면서 해당 조건이나 함수에 맞는 결과를 추출해 내는 중간 역할을 함 

4. 최종 연산
    1) 스트림의 자료를 소모하면서 연산을 수행하기 때문에 최종 연산이 수행되고 나면
       해당 스트림은 더 이상 사용할 수 없음
    2) 최종 연산은 결과를 만드는 데 주로 사용함
    3) forEach()
        - 요소를 하나씩 꺼내는 기능 
    4) sum(), count()     
    5) min(), max()
    6) reduce()                      

5. 배열을 스트림으로 변환하기 
    1) 배열의 원소들을 스트림 형태로 변환하여 처리할 수 있게 됨 
    2) 인덱스를 통한 직접 접근은 제공하지 않음 
    3) 스트림은 데이터 처리 작업을 연속적인 파이프라인으로 나타낼 수 있어
       가독성이 높고, 병렬 처리를 쉽게 구현 할 수 있음.

6. 함수형 인터페이스 메서드 참조 
    0) 코드의 중복 줄이는데 도움이 됨
    1) 정적 메서스 참조 
        - 클래스명::메서드명    
    2) 인스턴스 메서드 참조 
        - 인스턴스::메서드명       
    3) 특정 객체의 인스턴스 메서드 참조 
        - 클래스명::메서드명     
    4) 생성자 참조 
        - 클래스명::new   

7. reduce() 연산
    1) 내부적으로 스트림의 요소를 하나씩 소모하면서 개발자가 직접 지정한 기능을 수행함 
    2) T reduce(T identity, BinaryOperator<T> accumulator)
        - T identity는 초깃값을 의미
        - BinaryOperator<T> accumulator는 수행해야 할 기능 
            - R apply(T t, U u) 메서드를 반드시 구현해야 함 
                - 두 개의 매개변수와 한 개의 반환 값을 가짐 
                - 세 개 모두 같은 자료형 
    3) reduce() 메서드가 호출될 때  BinaryOperator의  apply() 메서드가 호출됨
    4) 예
        - Arrays.stream(arr).reduce(0, (a, b) -> a + b));          
            - 초깃값은 0이고
            - 스트림 요소가 매개변수로 전달되면서 합을 구함 
            - 내부적으로는 반복문이 호출됨, 리스트 요소만큼 호출되는 것임.  

8. 미니 구현
    1) 패키지 여행을 떠나는 고객이 있습니다.
       여행 비용은 15세 이상은 100만원, 그 미만은 50만원입니다.
       고객 3명이 패키지 여행을 갑니다.
       이때 비용 계산과 고객 명단 검색 등을 구현하시오. (스트림을 활용하시오) 
