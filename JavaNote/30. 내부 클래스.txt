0. 내부 클래스, 함수형 프로그래밍, 스트림 

1. 서론
    1) 클래스 내부 
        - 필드, 메서드, 생성자 
        - 이너(Inner) 클래스, 이너 인터페이스 
    2) Inner Class 
        - 클래스 내부에 선언한 클래스 
        - 대개 이 이너 클래스와 외부 클래스가 밀접한 관련이 있기 때문임.    

2. 이너 클래스 
    1) 클래스 내부에 포함되는 이너 클래스 (inner class)
    2) 종류 
        - 인스턴스 내부 클래스
        - 정적(static) 내부 클래스 
        - 지역(local) 내부 클래스 
        - 익명(anonymous) 내부 클래스 

        class A {               // 아우터 클래스 

            class B {           // 인스턴스 이너 클래스 
                
            }

            static class C {    // 정적 이너 클래스 

            }

            void abc() {
                class D {       // 지역 (이너) 클래스 

                }
            }

        }

    3) 변수 유형과 내부 클래스 유형 비교하기
        class ABC {                                
            int n1;             // 인스턴스 변수
            static int n2;      // 정적 변수

            public void abc() {
                int i;          // 지역 변수
            }
        }


        class ABC {                     // 외부 클래스 
            class In {                  // 인스턴스 내부 클래스
                static class SIn {      // 정적 내부 클래스

                }
            }
            public void abc() {
                class Local {           // 지역 내부 클래스 

                }
            }
        }
    4) 객체 생성하기 
        - 먼저 아우터 클래스의 객체를 생성해야 함 
        - 이후 생성한 아우터 클래스 객체의 참조 변수를 이용해
          객체 내부에 있는 이너 클래스의 생성자 호출함
        - 문법
            아웃 클래스 아웃 클래스 참조 변수 = new 아우터 클래스();
            아웃 클래스.이너 클래스 이너 클래스 참조 변수 =   
                    아웃 클래스 참조 변수.new 이너 클래스();

            clas A {
                class B {

                }
            }

            A a = new A();
            A.B b = a.new B();
    5) 정적 내부 클래스 
        - 일반 메서드                                   (사용 가능 여부)
            - 외부 클래스의 인스턴스 변수                        X
            - 외부 클래스의 정적 변수                           O
            - 정적 내부 클래스의 인스턴스 변수                   O        
            - 정적 내부 클래스의 정적 변수                       O
        - 정적 메서드 
            - 외부 클래스의 인스턴스 변수                        X
            - 외부 클래스의 정적 변수                           O
            - 정적 내부 클래스의 인스턴스 변수                   X        
            - 정적 내부 클래스의 정적 변수                       O 
    
    6) 지역 내부 클래스 
    
    7) 익명 내부 클래스 
        - 클래스 이름을 사용하지 않는 클래스 
        - 이름이 없는 클래스 
            - 지역 내부 클래스의 MyRunnable 클래스 이름은 
              실제로 호출되는 경우가 없음.
        - 클래스의 이름을 생략하고 주로 하나의 인터페이스나 하나의 추상클래스를
          구현하여 반환 
        - 인터페이스나 추상 클래스 자료형의 변수에 직접 대입하여
          클래스를 생성하거나 지역 내부 클래스의 메서드 내부에서 생성하여
          반환할 수 있음.
        - widget의 이벤트 핸들러에 활용됨 

3. 내부 클래스 정리

                        구현 위치                       사용할 수 있는              생성방법
                                                        외부 클래스 변수    
=============================================================================================================                        
인스턴스 내부 클래스    외부 클래스 멤버 변수와 동일        외부 인스턴스 변수          외부클래스를 먼저 만든후
                                                        외부 전역 변수              내부 클래스 생성
-------------------------------------------------------------------------------------------------------------                                                        
정적 내부 클래스        외부 클래스 멤버 변수와 동일        외부 전역 변수              외부클래스와 무관하게 
                                                                                    생성                     
-------------------------------------------------------------------------------------------------------------                                                                                       
지역 내부 클래스        메서드 내부에 구현                  외부 인스턴스 변수          메서드를 호출할 때 생성  
                                                         외부 전역 변수
-------------------------------------------------------------------------------------------------------------                                                         
익명 내부 클래스        메서드 내부에 구현하여              외부 인스턴스 변수          메서드를 호출할 때 생성,
                       변수에 대입하여 직접 구현           외부 전역 변수              인터페이스 타입 변수에 대입할 때
                                                                                    new 연산자를 사용하여 생성.                