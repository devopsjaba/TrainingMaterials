1. 조인(JOIN)의 의미 
    1) 설계가 잘된 관계형 데이터베이스의 테이블은 엔티티를 1가지 이상 포함함.
    2) 서로 다른 테이블을 공통 컬럼을 기준으로 합치는(결합하는) 테이블 단위연산.
    3) 조인의 결과 테이블은 이전 테이블의 컬럼 수의 합과 같음 
    4) 조인시 서로 다른 테이블에 같은 컬럼명이 존재하면 구분을 위해 
       테이블명.컬럼명으로 사용해서 표시함 

    5) 예
        - sakila 데이터베이스의 customer 테이블, address 테이블  

2. JOIN이 필요한 이유
    1) 필요한 정보(상품명, 유저 정보, 카테고리 정보 등)가
       각기 다른 테이블에 분산 저장되어 있음 
    2) 이를 하나의 테이블로 가져와 보기좋게 데이터를 추출하기 위해서임.   

3. JOIN 
    1) 서로 다른 테이블을 공통 컬럼을 기준으로 합치는(결합하는) 테이블 단위 연산.
    2) 여러 개의 테이블들을 연결하여 데이터를 검색하는 것
    3) 두개 이상의 테이블들을 연결 또는 결합하여 데이터를 출력하는 것
    4) 조인 속성
        - 조인 검색을 위해 테이블들을 연결해주는 속성(컬럼)
        - 일반적인 경우에 PK와 FK의 값 연관에 의해 조인이 이루어짐 
        - PK, FK 관계와는 별도로 일반 컬럼끼리 조인이 이루어지는 경우도 있음     

4. 조인의 종류 
    1) 내부 조인 (INNER JOIN)
        - 가장 많이 사용하는 조인 종류
        - 보통 조인이라고 하면 내부 조인을 의미함 
        - 두 테이블 모두 조건에 맞는 열을 조회할 수 있음. 
        - 두 테이블을 조인하여 조인 조건으로 사용한 열에 있는 같은 데이터를 
          조합하여 조회함 
        - 기본 형식 (ANSI 표준)
            SELECT [열]
            FROM [테이블 1] (INNER) JOIN [테이블 2] ON [테이블1.열] = [테이블2.열]
            WHERE [검색 조건]

        - 적용 예
            SELECT [고객.고객 번호], [고객.고객 이름], [주문.고객 번호], [주문.주문 날짜]
            FROM [고객] (INNER) JOIN [주문] ON [고객.고객 변호] = [주문.고객 번호]    

        - 테이블 3개 이상 조인하기 
            - 요구사항 예
                - 고객 정보, 고객 주소, 도시 이름의 데이터를 조회하기 
                    - customer, address, city 
            - 기본 형식 (ANSI 표준)
                SELECT [열]
                FROM [테이블 1] 
                    (INNER) JOIN [테이블 2] ON [테이블1.열] = [테이블2.열]
                    (INNER) JOIN [테이블 3] ON [테이블2.열] = [테이블3.열]
                WHERE [검색 조건]    

        - 최소로 필요한 조인 조건 개수 = 조인되는 테이블 수 - 1
            - 2(조인되는 테이블 수) - 1 = 1 (최소로 필요한 조인 조건의 개수)
            - 3(조인되는 테이블 수) - 1 = 2 (최소로 필요한 조인 조건의 개수)
            - 4(조인되는 테이블 수) - 1 = 3 (최소로 필요한 조인 조건의 개수)

    2) 외부 조인 (OUTER JOIN)
        - 두 테이블을 조인해 둘 중의 한 테이블에만 있는 데이터를 조회해야
          하는 경우에 사용하는 조인 
        - 외부 조인은 열의 일치 여부를 고려하지 않고 한 쪽 테이블과 
          다른 쪽 테이블에 조인을 할 때 사용함   
        - 예) 
            - 상품을 주문한 고객과 주문하지 않은 고객 데이터를 모두 조회하고 
              싶은 경우
        - 기본 형식 
            - SELECT [열]
              FROM [테이블 1]
                [LEFT | RIGHT | FULL] OUTER JOIN [테이블 2] 
                                        ON [테이블1.열] = [테이블2.열]               
              WHERE [검색 조건]
    
    3) 교차 조인 (cross join)
        - 각 테이블의 모든 경우의 수를 조합한 데이터가 필요한 경우 
        - 형식 
            SELECT [열]
            FROM [테이블 1]
                CROSS JOIN [테이블 2]
            WHERE [검색 조건]    


    4) 셀프 조인 (self join)
        - 동일한 테이블을 사용하는 특수한 조인임 
        - 자기 자신과 조인함               
