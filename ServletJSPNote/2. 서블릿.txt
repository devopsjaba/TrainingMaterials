1. 의미
    1) Servlet은 JSP가 나오기 전,
       자바로 웹 애플리케이션을 개발할 수 있는 기술.
    2) 서버 단에서 클라이언트 요청을 받아 처리한 후 응답하는 역할함.
        - 동적으로 작동하는 웹 애플리케이션 컴포넌트 
    3) MVC 모델에서 컨트롤러(Controller) 역할을 함 
    4) 모든 메서드는 스레드로 동작함          
    5) HttpServlet 클래스를 상속받음      
        - jakarta.servlet.http.HttpServlet

2. 서블릿 컨테이너 
    1) 서블릿을 관리하는 컨테이너 (수명주기 관리)
        - (HTTP) 요청         
        - 요청 전달 
        - 서블릿 로드 
        - 초기화 
        - 요청 처리 
        - (HTTP) 응답
    2) 네트워크 지원
    3) 멀티스레딩 관리 
    4) JSP 지원 

3. 서블릿 동작 방식 
    1) Controller 역할을 함 (MVC 패턴)
        - 요청 받아서 해당 요청 처리할 서블릿 찾음 
        - 서비스 조직 호출
        - 모델(Model)로부터 그 결과값을 받아서 결과값을 출력할 뷰(View)를 선택함 

4. 서블릿 작성 
    1) web.xml에 기술하는 방법  
       -  http://localhost:8080/HelloServlet/Servlet/HelloServlet.do
                       호스트명/컨텍스트루트명/요청명                

    2) @WebServlet 애너테이션으로 매핑                         

    3) 프런트 컨트롤러 작성하기 

5. 서블릿의 생명주기(liftcycle) 메서드 
    1) 클라이언트의 요청이 들어오면 
        먼저 서블릿 객체를 생성하고, 서블릿을 초기화하고, 요청을 처리함 
        - 이때 호출되는 콜백 메서드들을 수명주기 메서드라고 함              
    2) 서버를 종료할 때 서블릿 객체 소멸시킴       
    3) 서블릿의 수명주기 관리는 서블릿 컨테이너가 담당함   
        - 서블릿 객체 생성 => @PostConstruct (전처리) => init()
                                                       service()
                                                       doGet(), doPost()
                                                       destroy() => @PreDestroy (후처리)