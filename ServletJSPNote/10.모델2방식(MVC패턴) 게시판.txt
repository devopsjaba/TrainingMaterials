1. 모델 1구조 

2. 모델 2구조 (MVC 패턴)
    1) 컨트롤러 
        - 모델, 뷰를 제어하는 역할 
        - 사용자의 요청을 받아서 그 요청을 분석함 
            - 모델을 호출함
            - 모델이 결과값을 반환하면 출력할 뷰를 선택한 후 전달함.
    2) 모델
        - 비즈니스 로직 혹은 DB 관련된 작업 
        - 서비스 레이어
    3) 뷰
        - JSP 페이지 
        - 사용자에게 보여지는 부분 

3. 게시판 구상
    1) 누구나 글 작성 가능
    2) 글쓰기 시 비밀번호 입력 
        - 비밀번호 통해 수정, 삭제 가능 
    3) 파일 첨부 기능 
        - 업로드, 다운로드, 용량 제한 

    4) 일반적인 흐름
        - 목록 보기 -----------------------------> 글쓰기                 
                   <-----------------------------   
             |
             |
            \|/                                
          상세 보기 -----------------------------> 파일 다운로드
            /|\        
             |
            \|/      
          수정 하기     삭제하기

    5) 요청명 정의

        기능        매핑방법        요청명               controller(servlet)      view(jsp)
        -------------------------------------------------------------------------------------------------
        목록보기     web.xml      /mvcboard/list.do       ListController        /board/list.jsp
        글쓰기       web.xml      /mvcboard/write.do      WriteController       /board/write.jsp
        상세보기     annotation   /mvcboard/view.do       ViewController        /board/view.jsp 
        비빌번호 검증 annotation   /mvcboard/pass.do       PassController       /board/pass.jsp 
        수정        annotation    /mvcboard/edit.do       EditController        /board/edit.jsp 
        삭제
        다운로드 

4. 목록보기
    1) 프로세스
                /mvcboard/list.do
        클라이언트 -------------->  컨트롤러    <------------>      모델     <------------>   DB     
                            (ListController.java)    (MVCBoardDTO.java,MVCBoardDAO.java)
                                       |
                                       |
                                      \|/
                                       뷰
                                    (list.jsp)                 

5. 글쓰기
    1) 글쓰기 + 파일 업로드 
    2) 프로세스
                /mvcboard/write.do
        클라이언트-----------------> 컨트롤러
                                (WriteController.java)   
                                       |
                                       |
                                      \|/
                                      뷰
                                 (write.jsp)  ------------->    모델                   -----> DB
                                                    (MVCBoardDTO.java,MVCBoardDAO.java)
    3) 파일 업로드 
        - 작성폼(form)에 추가 설정
            - method = post
            - enctype = multipart/form-data
                - 서버로 전송할 때 인코딩 방식 지정 속성 
                - 모든 문자를 인코딩하지 않음 
        - 테이블 생성
        - DTO, DAO 클래스 

6. 상세 보기
                    view.do 
    1) 클라이언트 --------------->  컨트롤러     <----------------
                                 (ViewController.java)          |
                                       |                        |
                                       |                        |
                                      \|/                       |
                                      뷰                       \|/
                                 (view.jsp)  ------------->    모델            -------> DB
                                                    (MVCBoardDTO.java,MVCBoardDAO.java)                   

7. 수정하기
                    pass.do 
    1) 클라이언트 --------------->  컨트롤러     <----------------
                                 (PassController.java)          |
                                       |                        |
                                       뷰                       |
                                  (edit.jsp)                    |
                                       |                        |
                                       | edit.do                |
                                      \|/                       |
                                   컨트롤러                      |
                                 (EditController.java) -------->|
                                       |                        |
                                       |                        |
                                      \|/                       |
                                      뷰                       \|/
                                 (view.jsp)  ------------->    모델            -------> DB
                                                    (MVCBoardDTO.java,MVCBoardDAO.java)  

8. 삭제하기 
                    pass.do 
    1) 클라이언트 --------------->  컨트롤러     <----------------
                                 (PassController.java)          |
                                       |                        |
                                       |                        |
                                      \|/                       |
                                      뷰                       \|/
                                 (pass.jsp)  ------------->    모델            -------> DB
                                                    (MVCBoardDTO.java,MVCBoardDAO.java)                   

