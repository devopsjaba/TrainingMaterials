1. 액션 태그 (action tag)
    1) JSP 표준 태그 
    2) <jsp:forward>
            - 현재 페이지에 들어온 요청을 다음 페이지로 보내는 기능     
    3) <jsp:param>
            - 다른 페이지에 값을 전달해주는 액션 태그         


2. 표현 언어 (Expression Language, EL)
    1) 스크립트 언어 
    2) 사용법 
        - ${ 속성 }    
        - 영역에 저장된 속성값 출력
    3) 내장 객체 
        - 4가지 영역에 접근하기 위한 내장 객체 
            - pageScope
                - pageContext 내장 객체와 같이 page 영역에 저장된 속성값을 읽어옴 
            - reqeustScope
                - request 내장 객체와 같이 request 영역에 저장된 속성값을 읽어옴 
            - sessionScope
                - session 내장 객체와 같이 session 영역에 저장된 속성값을 읽어옴 
            - applicationScope        
                - application 내장 객체와 같이 application 영역에 저장된 속성값을 읽어옴

    4) form 값 처리                 
        - param 
            - request.getParameter("매개변수명")
        - paramValues
            - request.getParameterValues("매개변수명") 

    5) 객체 전달 
        - 객체를 영역에 저장한 후, 내장 객체의 영역이 공유됨   

    6) 기타 내장 객체 
        - cookie, header, headerValues, initParam, pageContext    

    7) Collection         

    8) EL 연산자들 
        - 산술, 비교, 논리 연산자 
        - 삼항연산자  
        - null일때 연산
            - 0으로 인식 => 예외 발생 안함             
        - empty 연산자
            - 값이 없는 경우 
                - null 
                - 빈 문자열
                - 길이가 0인 배열
                - size가 0인 컬렉션             

3. JSTL 
    1) JSP Standard Tag Library 
    2) 코어태그 
        - set, remove 
        - if
        - choose, when, otherwise
        - forEach, forTokens
        - import, redirect, url 
        - catch  
    3) 국제화 태그 
        - 숫자 
        - 날짜, 타임존 
        - 로케일         
    4) JSTL 사용하기 위한 선언
        - <%@ taglib prefix="c" uri="jakarta.tags.core" %>    

4. JSTL - 코어(Core) 태그 
    1) <c:set> 
        - 변수나 자바빈즈 생성할 때 사용 
        - setAttribute() 메세드와 동일 기능 
        - 변수 생성 형식
            - <c:set var="변수명" value="값" scope="영역" />   
        - 자바빈즈나 컬렉션 생성    
            - 속성
                - target : 자바빈즈 설정
                - property : 멤버변수 값 지정    

    2) <c:remove>
        - <c:set> 태그로 설정한 변수를 제거할 때 사용
        - removeAttribute() 메서드와 같은 역할 
        - 영역 지정하지 않을 경우 동일한 이름의 변수가 있다면 한꺼번에 삭제함 
            - 영역 지정한 후 삭제해야 안전함 

    3) <c:if>
        - 자바의 if와 동일
        - else가 없음
        - 속성
            - var, scope 
            - test
                - if문에서 사용할 조건 지정 
                - 값으로 EL이 아닌 일반 값이 오면 무조건 false 반환함 

    4) <c:choose>, <c:when>, <c:otherwise>
        - 다중 조건시 사용 

    5) <c:forEach>
        - 반복 위해 사용
        - 형태
            - <c:forEach begin="시작값" end="마지막값" step="증가값" var="변수명" >
            - <c:forEach items="배열 or 컬렉션" var="변수명">
        - 속성
            - varStatus
                - 루프의 현재 상태를 알려주는 변수의 이름 지정   
            - varStatus 속성을 통해 추가적인 정보 획득할 수 있는 속성
                - count : 반복 횟수 
                - index : var에 지정한 현재 루프의 변수값(인덱스) 반환 
                - current :  var에 지정한 현재 루프의 변수값 반환          
                - first : 루프의  처음일 때 true 반환
                - last : 루프의  마지막일 때 true 반환

