1. 개요 
    1) 웹 페이지(page)들 => 하나의 요청(request)을 처리함 
        => 요청들이 모여 하나의 세션(session)을 형성
        => 다시 세션들이 모여 하나의 웹 애플리케이션(application)을 이룸 
    2) 4 가지 영역
        - page 영역
            - 동일 페이지에서만 공유됨, 페이지를 벗어나면 소멸
        - request 영역
            - 하나의 요청에 의해 호출된 페이지, 포워드된 페이지까지 공유됨
        - session 영역
            - 클라이언트가 처음 접속한 후 웹 브라우저를 닫을 때까지 공유됨 
        - application 영역         
            - 한 번 저장되면 웹 애플리케이션이 종료될 때까지 유지됨 
    3) API 
        - setAttribute(String name, Object value)
            - 각 영역에 속성을 저장함 
        - getAttribute(String name)
            - 영역에 저장된 속성값을 얻어옴     
        - removeAttribute(String name)   
            - 영역에 저장된 속성 삭제함                      

2. DTO 패턴 
    1) Data Transfer Object
    2) 주로 데이터를 저장하거나 전송하는데 쓰이는 객체 
    3) 데이터만 있는 객체라 하여 값 객체(Value Object)라고도 함
    4) 자바빈즈(beans) 규약에 따라 작성함      
        - 기본 패키지 이외의 패키지에 저장
        - private 접근 지정자 사용
        - 게터/세터 메서드의 접근 지정자는 public 
            - 멤버 변수에 접근하기 위함 
        - 기본 생성자가 있어야 함            

3. page 영역
    1) jsp 페이지마다 하나씩 생성됨 
    2) pageContext 객체를 할당받게 됨         
    3) 이 객체에 저장된 정보를 해당 페이지에서만 사용할 수 있음 
       이 페이지를 벗어나면 소멸됨 
    4) include 지시어로 포함한 파일은 하나의 페이지로 통합되므로 page 영역 공유됨        

4. request 영역 
    1) 클라이언트 요청을 할때마다 새로운 request 객체가 생성됨 
    2) 같은 요청을 처리하는 데 사용되는 모든 JSP 페이지가 공유함 
    3) 현재 페이지와 포워드된 페이지까지 공유     

5. session 영역 
    1) 클라이언트가 웹 브라우저를 최초로 열고난 후 닫을 때까지 
       모든 페이지는 session 객체를 공유함 
    2) 세션
        - 클라이언트가 서버에 접속해 있는 상태, 단위
        - 로그인 상태를 유지하는 동안 사용됨 
        - 웹 브라우저를 닫으면 자동으로 로그아웃이 됨 
            - session 삭제됨        

6. application 영역
    1) 웹 애플리케이션은 단 하나의 application 객체만 생성함 
    2) 클라이언트가 요청하는 모든 페이지가 application 객체를 공유하게 됨 
    3) 웹 서버를 시작할 때 만들어짐.  웹 서버를 내릴 때 삭제됨.
        - application 영역에 한 번 저장된 정보는 페이지를 이동하거나, 웹 브라우저를 
          닫았다가 새롭게 접속(로그인)해도 유지됨 