1. 인프라 
    1) 온프레미스 
        - 직접 구매, 설치, 관리
        - 서버 사용에 긴 시간 소요 (수주, 수개월)
    2) 클라우드 
        - 필요한 만큼 할당 ==> 사용한 만큼 비용 지불 
        - 간단하고 즉각적으로 할당 
        - API / SDK 이용해 모든 자원을 자동화 가능 
        - 금융, 국방분야에서 클라우드 사용 추세    

2. 컴퓨팅 환경
    1) 가상머신
        - 하드웨어 가상화 기반으로 가상머신 할당 
        - 가상 머신 단위로 확장 
            - 스케일 업, 스케일 아웃 
    2) 컨테이너 
        - 운영체제 기반 가상화로 컨테이너 패키지 단위로 가상화  
        - 컨테이너 단위로 확장 
        - 빠른 확장성 
            - 기존 : 컴퓨터를 커서 운영체제 구동되고 어플리케이션 실행 
            ==> 어플리케이션 실행 
        - 리눅스 기반 기술로 자원의 격리를 수행                        

3. 서버 관리
    1) 쉘 스크립트 
        - 커스텀 쉘 스크립트 
        - 담당자 부재 시 대응 어려움 
        - 스크립트 자체 오류 존재 가능 
    2) 자동화 도구 
        - 필요한 부분에 쉘 스크립트 사용 
        - 추상화된 형태로 자원을 기술하는 도구들 사용하는 관리       

4. 장애 대응 
    1) 리눅스 명령의 이해 
        - 서버에 직접 접속 
        - 리눅스 명령어 기반으로 복구/분석 
    2) 리눅스의 이해                    
        - 중앙 집중화된 로깅/모니터링 환경 
        - 수집된 데이터를 기반으로 장애 판단 

5. 컨테이너 기술 
    1) history 

6. 가상화 (virtualization)
    1) 일반적으로 서버, 스토리지, 네트워크, 애플리케이션 등을 가상화하여
       하드웨어 리소스를 효율적으로 사용하는데 목적이 있음
    2) 기업은 효율적인 자원 활용, 자동화된 IT 관리, 빠른 재해 복구 등의
       장점 
    3) 물리적 하드웨어 유지 관리 대신 소프트웨어적으로 추상화된 가상화를 
       통해 제한된 부분을 쉽게 관리하고 유지할 수 있음 
    4) 하이퍼바이저 기반의 가상머신(VM)을 통해 수행함
        - VirtualBox, Vmware                         

7. 하이퍼바이저 (가상 머신 모니터)
    1) 호스트 컴퓨터에서 다수의 운영 체제를 동시에 실행하기 위한 
       논리적 플랫폼   
    2) CPU, 메모리, 스토리지 등의 리소스를 에뮬리이션 
        ==> 한대의 서버에 독립된 여러 머신 환경을 구성 가능 
    3) Type 1
             VM            VM           
           App A          App B
           Bins/Libs    Bins/Libs
           Guest OS     Guest OS
                     Hypervisor
                    Infrastructure    

       Type 2
    
                       OS 
                    Hypervisor    
                       OS 
                    HardWare
            